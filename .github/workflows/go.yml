name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build
      run: go build -v ./...

  release:
    runs-on: ubuntu-latest
    outputs:
      package_version: ${{ steps.set_vers.outputs.version }}
    needs: build
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Set outputs vrom Version
      id: set_vers
      run: echo "version=$(grep -oP 'const version = "\K[^"]+' main.go)" >> $GITHUB_OUTPUT

    - name: Tag repository
      run: git tag v${{ steps.set_vers.outputs.version }}
      
    - name: Push tag
      run: git push origin v${{ steps.set_vers.outputs.version }}

    - name: Install GoReleaser
      run: go install github.com/goreleaser/goreleaser@v0.180.0

    - name: Create Release From tags
      run: |
        goreleaser release --rm-dist
      env:
        GITHUB_TOKEN: ${{ secrets.API_KEY_GITHUB }}

  docker:
      runs-on: ubuntu-latest
      needs: [release]
      steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/weatherpush:latest
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/weatherpush:${{ needs.release.outputs.package_version }}
